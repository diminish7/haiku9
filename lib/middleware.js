// Generated by CoffeeScript 1.9.1
(function() {
  var Asset, URL, async, basename, classify, create, dirname, extname, join, mime, ref;

  URL = require("url");

  ref = require("path"), dirname = ref.dirname, basename = ref.basename, extname = ref.extname, join = ref.join;

  async = require("fairmont").async;

  mime = require("mime-types");

  Asset = require("./asset");

  classify = function(accept) {
    switch (false) {
      case !accept.match(/html/):
        return "html";
      case !accept.match(/css/):
        return "css";
      case !accept.match(/javascript/):
        return "javascript";
      default:
        return void 0;
    }
  };

  create = function(root) {
    return async(function*(request, response, next) {
      var asset, directory, error, extension, format, name, path;
      if (request.method === "GET") {
        path = URL.parse(request.url).pathname.slice(1);
        directory = join(root, dirname(path));
        extension = extname(path);
        name = basename(path, extension);
        if (name === "") {
          name = "index";
        }
        format = classify(request.headers.accept);
        if (format == null) {
          format = classify(mime.lookup(extension));
        }
        if (format == null) {
          format = "text";
        }
        try {
          asset = (yield Asset.globNameForFormat(directory, name, format));
          try {
            response.setHeader('content-type', (mime.contentType(format)) || (mime.contentType(extension)));
            return response.end((yield asset.render(format)), 200);
          } catch (_error) {
            error = _error;
            return response.end("Unknown server error: " + request.url, 500);
          }
        } catch (_error) {
          error = _error;
          return next();
        }
      } else {
        return next();
      }
    });
  };

  module.exports = {
    create: create
  };

}).call(this);
